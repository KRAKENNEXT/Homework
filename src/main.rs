/////////////////////////////////////////
/////Перечисление всех i с 8 по 128//////
/////////////////////////////////////////
fn main() {

   // let r:i8=8;
   // let e:i16=16;
   // let y:i32=32;
   // let u:i64=64;
   // let o:i128=128;

////// Все математические операции с f32 и f64////////////////////
    let operation ="su";
    match operation {
        "pl"=>print!("{}",plus(64 as f64,64 as f64)),
        "ru"=>print!("{}",ruz(64 as f64, 64 as f64)),
        "de"=>print!("{}",del(64 as f64,64 as f64)),
        "su"=>print!("{}",sum(64 as f64,64 as f64)),
        "pl2"=>print!("{}",plus2(32 as f32,32 as f32)),
        "ru2"=>print!("{}",ruz2(32 as f32,32 as f32)),
        "de2"=>print!("{}",del2(32 as f32,32 as f32)),
        "su2"=>print!("{}",sum2(32 as f32,32 as f32)),
        _=>println!("Если чтото другое то уйди нахуй")
    }



/////////////Работа с функциями 1///////////////
/////////Не принимает просто печать/////////////

    fn neve(){
        print!("");

    }
    neve();
/////////////Работа с функциями 2///////////////
/////////Принимает просто печать////////////////
fn none()->(){
        let non = 217;
        print!("Hello ladies' man {}",non);

    }
none();

/////////////Работа с функциями 3///////////////
/////////Принимает /Возвращает /////////////////
fn fund(year:f64)->f64{
    let c_y:f64 =2023.0;
    return c_y -year;

}
    println!(" Ваш возраст {}",fund(1980.0));

}
/////////////////////////////////////////
//////////f64 все действия ..////////////
/////////////////////////////////////////
fn plus(num1:f64,num2:f64)->f64{
    num1 +num2
}
fn ruz(num1:f64,num2:f64)->f64{
    num1 -num2
}
fn del(num1:f64,num2:f64)->f64{
    num1 /num2
}
fn sum(num1:f64,num2:f64)->f64{
    num1 *num2
}
////////////////////////////////////////////////
///////////f32 все действия ..//////////////////
////////////////////////////////////////////////
fn plus2(num1:f32,num2:f32)->f32{
    num1 +num2
}
fn ruz2(num1:f32,num2:f32)->f32{
    num1 -num2
}
fn del2(num1:f32,num2:f32)->f32{
    num1 /num2
}
fn sum2(num1:f32,num2:f32)->f32{
    num1 *num2
}
///////////Разница в переменных..////////////////////////////
/////////////////////////////////////////////////////////////
// U - хранит целое число со знаком и////////////////////////
// занимает в памяти оперделенное количество бит/////////////
//(Диапазон значений от -128 до 127))////////////////////////
//В то же время i - может хранить только положительные числа/
// и в строгом диапозоне от 0 до 255/////////////////////////

